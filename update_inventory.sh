#!/bin/bash

set -e

# Get the directory of the script
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Path to the inventory file
INVENTORY_FILE="$SCRIPT_DIR/ansible/inventory"

# Get instance information from multipass
INSTANCES=$(multipass list --format json)

# Start with a clean inventory file
cat > "$INVENTORY_FILE" << EOL
# This inventory was auto-generated by update_inventory.sh

[all:vars]
ansible_user=ubuntu
ansible_ssh_private_key_file=/Users/gis/.ssh/id_ed25519
ansible_ssh_common_args='-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'

EOL

# Process controller node
CONTROLLER_IP=$(echo "$INSTANCES" | jq -r '.list[] | select(.name=="controller-node") | .ipv4[0]')
if [ -n "$CONTROLLER_IP" ]; then
    echo "[controller]" >> "$INVENTORY_FILE"
    echo "controller-node ansible_host=$CONTROLLER_IP" >> "$INVENTORY_FILE"
fi

# Process worker nodes
WORKER_IPS=$(echo "$INSTANCES" | jq -r '.list[] | select(.name|test("^worker-")) | .ipv4[0]')
if [ -n "$WORKER_IPS" ]; then
    echo "
[workers]" >> "$INVENTORY_FILE"
    COUNT=0
    for ip in $WORKER_IPS; do
        echo "worker-$COUNT ansible_host=$ip" >> "$INVENTORY_FILE"
        COUNT=$((COUNT + 1))
    done
fi

# Add the public key to each host
PUB_KEY=$(cat ~/.ssh/id_ed25519.pub)

ALL_HOSTS=$(echo "$INSTANCES" | jq -r '.list[].ipv4[0]')

for host in $ALL_HOSTS; do
    echo "Configuring SSH for $host"
    ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ubuntu@$host "\
        mkdir -p ~/.ssh && \
        chmod 700 ~/.ssh && \
        echo \"$PUB_KEY\" >> ~/.ssh/authorized_keys && \
        chmod 600 ~/.ssh/authorized_keys && \
        sort -u ~/.ssh/authorized_keys -o ~/.ssh/authorized_keys"
done

echo "Inventory file updated successfully."
